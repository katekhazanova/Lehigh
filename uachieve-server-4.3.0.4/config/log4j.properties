# In all but the most extreme conditions, we recommend setting the rootLogger to 
# WARN or ERROR.  Setting rootLogger to INFO or DEBUG produces a large amount of
# log data from the third-party libraries.

log4j.rootLogger=warn, daemonLog

# NOTE:
# u.achieve audit log levels are controlled by the job_queue_list.log_level field
# you can set this field via self-service and the client when requesting an audit.


# uachieve.daemon log level
# 			Set daemon logger to INFO for standard logging, DEBUG for detailed logging
# 			additivity=false keeps daemon log messages from showing up in the dump file
log4j.logger.uachieve.daemon=info
log4j.logger.uachieve.reports=warn,dump2file
log4j.logger.org.hibernate=warn,dump2file
log4j.logger.uachieve.apis.common.logger=warn,errorLog


###
### log message destinations
###
### direct dump messages to console ###
log4j.appender.dump2console=org.apache.log4j.ConsoleAppender
log4j.appender.dump2console.Target=System.out
log4j.appender.dump2console.layout=org.apache.log4j.PatternLayout
log4j.appender.dump2console.layout.ConversionPattern=%-5p [%-6r] - %m%n

##
## Error log messages
##
log4j.appender.errorLog=org.apache.log4j.DailyRollingFileAppender
log4j.appender.errorLog.File=../logs/error.log
log4j.appender.errorLog.layout=org.apache.log4j.PatternLayout
log4j.appender.errorLog.layout.ConversionPattern=%-5p [%-6r] - %m%n

### direct dump messages to file
### rootLogger appenders of type FileAppender will have their 
### filename modified at run time by adding jobid + .log
log4j.appender.dump2file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.dump2file.File=../logs/uachieve.server.log
log4j.appender.dump2file.layout=org.apache.log4j.PatternLayout
log4j.appender.dump2file.layout.ConversionPattern=%-5p [%-6r] - %m%n

### direct daemon log messages to rolling file
log4j.appender.daemonLog.File=../logs/uachieve.daemon.log
log4j.appender.daemonLog=org.apache.log4j.DailyRollingFileAppender
log4j.appender.daemonLog.DatePattern='.'yyyy-ww
log4j.appender.daemonLog.layout=org.apache.log4j.PatternLayout
log4j.appender.daemonLog.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} : [%-5p] %c %x - %m%n