######################################################################################
######################################################################################
######################### CollegeSource Security Properties ##########################			  
######################################################################################
######################################################################################
#
uachieve.security.appid = SEC
#
freemarker.cache = true	
#
######################################################################################
# Domain Labels				  
######################################################################################
security.domains.levelOne=
security.domains.levelTwo=
security.domains.levelThree=
security.domains.levelFour=
security.domains.levelFive=
security.domains.levelSix=
#
######################################################################################
# JDBC Configuration			  
#
# This needs to be configured even if authentication does not happen in the database. 
# All installed applications should use these settings for a centralized management of 
# security groups, role, etc.
######################################################################################
security.jdbc.driver=oracle.jdbc.driver.OracleDriver
security.jdbc.url=jdbc:oracle:thin:@louie.cc.lehigh.edu:1526:blev
security.jdbc.username=dars
security.jdbc.password=baboon
security.jdbc.jndi=
security.jdbc.initialNumberOfConnections=5
security.jdbc.maxActiveConnections=20
security.jdbc.minIdleConnections=3
# MSSQL: select 1
# DB/2: SELECT 1 FROM sysibm.sysdummy1
# Oracle: select 'validationQuery' from dual
security.jdbc.validationQuery=select 1 from dual
#
######################################################################################
# Security Filter encoding			  
# 
# This config makes it so that special characters like '&' that are html encoded to '&amp;'
# to be escaped back to '&' to help if the school uses special characters in their encoding.
# But by default this parameter is set to false so special characters are html encoded
# which is highly encouraged by "OWASP" standards which our applications are tested under.
# So setting this config to true will resolve encoding issues but will allow 
# potentially high risk characters to be submitted into the application.
# 
######################################################################################
security.filter.removeHtmlEncoding=false

######################################################################################
# Default User Group (Required for U.achieve Self-Service)
#
# If you want any user that can authenticate but that has no specific authorities
# to be able to login with a default user group, add that group name here.  
#
security.defaultUserGroup=ROLE_ANONYMOUS
#
######################################################################################
######################################################################################
# LDAP Configuration	
######################################################################################
######################################################################################
#
# If using LDAP, please see the required and optional LDAP properties below:		  
#													
######################################################################################
# LDAP Connection URL (Required)
#
security.ldap.url=ldap://domain:port/dc=value,dc=value
#
######################################################################################
# LDAP Authentication Options (One Required)
#
# You must choose to use either the "Manager Service Account" or the "User DN Pattern" 
# to bind for LDAP authentication.
#
# Manager Service Account (use if you want to bind on a single service account)
security.ldap.manager=cn=user,ou=people,dc=value,dc=value
security.ldap.password=password
#
# User DN Pattern (use if you want to bind with the account of the user logging in)
security.ldap.userDnPattern=cn={0},ou=people,dc=value,dc=value
#
# Alternate Bind Id 
#
# Use these properties if using the user DN pattern and your DN Pattern needs to use 
# something besides the regular username to bind. Whatever that other attribute is should 
# be the altBindAttribute.
#
# Example:  username = doej, userDn = cn=John Doe, ou=people
# 
security.ldap.altBindIdFilter=(sAMAccountName={0})
security.ldap.altBindAttribute=name
#
######################################################################################
# Search Filters (Required)
#
# The userNameSearchFilter is used everywhere that an LDAP search needs to be done by 
# looking up something by username. The sisIdSearchFilter is used everywhere that an LDAP 
# search needs to be done by SIS (Student) Id. Thus, the LDAP attribute used for the 
# username and the attribute used for the sisId should be used for these two, respectively.
#
security.ldap.userNameSearchFilter=(cn={0})
security.ldap.sisIdSearchFilter=(eid={0})
#
# Name Result Limiting Filter (Optional)
#
# This filter is appended to the end of the search filter used in the name search,
# which is constructed using the firstNameField and lastNameField. Multiple conditions 
# can be added simply by adding another in parentheses.
#
# Example:  security.ldap.nameResultLimitingFilter=(field1=value1)(field2=value2)
#
#security.ldap.nameResultLimitingFilter=(field=value)
#
# Search Count Limit (Optional)
#
# You can set this limit to restrict the number of results returned by the LDAP user 
# search by first and/or last name.
#
#security.ldap.searchCountLimit=0
#
######################################################################################
# Search Base (Required)
#
# This searchBase is used as the location where LDAP searches should be performed. If
# you need to use multiple search bases, you can include them with a forward slash (/) 
# to separate multiple values.
#
# Example:	security.ldap.searchBase=ou=staff/ou=students			 
#
security.ldap.searchBase=ou=people
#
######################################################################################
# Group Attribute (Required)
#
# This is the field on the user's profile that holds the names of group of which 
# the user is a member. Multiple group role attributes can be specified by providing 
# a list separated by commas.
#
security.ldap.groupAttribute=memberOf
#
# The next two (optional) properties specify whether you want the group name to be 
# prefixed with any value or converted to upper case for matching with the groups defined  
# in the CollegeSource security database tables. By default, the groupPrefix is blank and 
# convertToUpperCase is false. A common groupPrefix may be "ROLE_" or "GROUP_".
#
security.ldap.groupPrefix=
security.ldap.convertGroupToUpperCase=false
#
######################################################################################
# Alternate Ldap User Name (Optional)
#
# If you want your users to login with one username, but for some reason you require 
# that the username the application sees be a different id, set this property to true. 
# An example situation is if the user logs in with a uid but you need to use the SIS id
# instead to run audits.  
#
security.ldap.useAlternateLdapUserName=false
security.ldap.alternateUserNameAttribute=eid
#
######################################################################################
# User Information Attributes (Required)
#
security.ldap.usernameField=cn
security.ldap.firstNameField=givenName
security.ldap.lastNameField=sn
security.ldap.emailField=mail
security.ldap.sisidField=eid
security.ldap.advisorNameField=eid
#
######################################################################################
######################################################################################
# CAS Configuration 
######################################################################################
######################################################################################
#
# If using CAS, please see the required properties below: 
#
######################################################################################
# CAS Server URL (Required)
#
security.cas.server.host=https://ltcas.cc.lehigh.edu/app
#
# CollegeSource Security Application URL (Required)
#
security.cas.dashboard.host=https://enzo.cc.lehigh.edu:8445/dashboard
#
######################################################################################
######################################################################################
# Shibboleth Configuration 
######################################################################################
######################################################################################
#
# If using Shibboleth, please see the required properties below: 
#
######################################################################################
# Shibboleth URL's (Required)
#
security.shibboleth.loginUrl=https://server:port/login
security.shibboleth.logoutUrl=https://server:port/logout
#
# Shibboleth Data Attribute Names (Required)
#
security.shibboleth.usernameField=
security.shibboleth.firstNameField=
security.shibboleth.lastNameField=
security.shibboleth.sisidField=
#
# Shibboleth Data Attribute Names (Optional)
#
security.shibboleth.emailField=
security.shibboleth.groupsField=
######################################################################################
# SIS User Lookup Service Query Configuration
######################################################################################
######################################################################################
#
# If using SisUserLookupService, please see the required Queries below:
#
######################################################################################
# lookupAllUsersQuery
security.sis.lookupAllUsersQuery=SELECT B.USER_ID, B.FIRST_NAME, B.LAST_NAME, B.STU_ID, ' ' AS email, ' ' AS password, ' ' AS notes FROM RED_USER B UNION SELECT A.USER_ID, A.FIRST_NAME, A.LAST_NAME, A.LIN STU_ID, ' ' AS email, ' ' AS password, ' ' AS notes FROM LU_UACHIEVE_SECURITY A

#lookupUsersQuery
security.sis.lookupUsersQuery=SELECT B.USER_ID, B.FIRST_NAME, B.LAST_NAME, B.STU_ID, ' ' AS email, ' ' AS password, ' ' AS notes FROM RED_USER B UNION SELECT A.USER_ID, A.FIRST_NAME, A.LAST_NAME, A.LIN STU_ID, ' ' AS email, ' ' AS password, ' ' AS notes FROM LU_UACHIEVE_SECURITY A

#lookupUserByNameQuery
security.sis.lookupUserByNameQuery=SELECT user_id as user_id, first_name as first_name, last_name as last_name, LIN as stu_id, ' ' as email, ' ' as password, ' ' as notes FROM LU_UACHIEVE_SECURITY where 1=1

#lookupUserByUsernameQuery
security.sis.lookupUserByUsernameQuery=SELECT SUB.USER_ID, SUB.FIRST_NAME, SUB.LAST_NAME, SUB.STU_ID, ' ' AS email, ' ' AS password, ' ' AS notes FROM( SELECT B.USER_ID, B.FIRST_NAME, B.LAST_NAME, B.STU_ID FROM RED_USER B UNION SELECT A.USER_ID, A.FIRST_NAME, A.LAST_NAME, A.LIN STU_ID FROM LU_UACHIEVE_SECURITY A ) SUB WHERE LOWER(SUB.USER_ID) = LOWER(?)

#lookupUserBySisIdQuery
security.sis.lookupUserBySisIdQuery=SELECT SUB.USER_ID, SUB.FIRST_NAME, SUB.LAST_NAME, SUB.STU_ID, ' ' AS email, ' ' AS password, ' ' AS notes FROM(    SELECT B.USER_ID, B.FIRST_NAME, B.LAST_NAME, B.STU_ID FROM RED_USER B UNION SELECT A.USER_ID, A.FIRST_NAME, A.LAST_NAME, A.LIN STU_ID FROM LU_UACHIEVE_SECURITY A ) SUB WHERE SUB.STU_ID = ?

#lookupUsersBySisIdQuery
security.sis.lookupUsersBySisIdQuery=SELECT SUB.USER_ID, SUB.FIRST_NAME, SUB.LAST_NAME, SUB.STU_ID, ' ' AS email, ' ' AS password, ' ' AS notes FROM(   SELECT B.USER_ID, B.FIRST_NAME, B.LAST_NAME, B.STU_ID FROM RED_USER B UNION SELECT A.USER_ID, A.FIRST_NAME, A.LAST_NAME, A.LIN STU_ID FROM LU_UACHIEVE_SECURITY A ) SUB WHERE SUB.STU_ID = ?